name: Changelog UpdateCheck

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  changelog-check:
    runs-on: ubuntu-latest
    name: Check CHANGELOG.md for updates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          
      - name: Check for CHANGELOG.md changes
        id: check_changelog
        run: |
          echo "üîç Checking for CHANGELOG.md changes..."
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
          # Get the current branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Branch: $BRANCH_NAME"
          
          # Try to find associated PR for this branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # We have direct PR context
            BASE_REF="${{ github.event.pull_request.base.sha }}"
            echo "PR event detected - using base SHA: $BASE_REF"
          else
            # For push events, try to find the PR and get its base
            echo "Push event - trying to find associated PR..."
            
            # Get PR info using GitHub API
            PR_INFO=$(curl -s -H "Authorization: token ${{ github.token }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:$BRANCH_NAME&state=open")
            
            if echo "$PR_INFO" | jq -e '.[0]' > /dev/null 2>&1; then
              BASE_REF=$(echo "$PR_INFO" | jq -r '.[0].base.sha')
              echo "Found PR - using base SHA: $BASE_REF"
            else
              # Fallback to master comparison
              if git show-ref --verify --quiet refs/remotes/origin/master; then
                BASE_REF="origin/master"
              elif git show-ref --verify --quiet refs/heads/master; then  
                BASE_REF="master"
              else
                echo "‚ö†Ô∏è  Cannot find master branch, using HEAD~1"
                BASE_REF="HEAD~1"
              fi
              echo "No PR found - comparing against: $BASE_REF"
            fi
          fi
          
          # Show changed files for debugging
          echo "All changed files in this branch:"
          git diff --name-only $BASE_REF...HEAD
          
          # Check if CHANGELOG.md was modified anywhere in this branch
          if git diff --name-only $BASE_REF...HEAD | grep -q "^CHANGELOG\.md$"; then
            echo "changelog_updated=true" >> $GITHUB_OUTPUT
            echo "‚úÖ CHANGELOG.md has been updated in this branch"
          else
            echo "changelog_updated=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  CHANGELOG.md has NOT been updated in this branch"
          fi
          
      - name: Get PR number
        id: get_pr_number
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            # Get PR number from API for push events
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            PR_INFO=$(curl -s -H "Authorization: token ${{ github.token }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:$BRANCH_NAME&state=open")
            
            if echo "$PR_INFO" | jq -e '.[0]' > /dev/null 2>&1; then
              PR_NUMBER=$(echo "$PR_INFO" | jq -r '.[0].number')
              echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
            else
              echo "pr_number=" >> $GITHUB_OUTPUT
            fi
          fi
          
      - name: Comment on PR (no changelog)
        if: steps.check_changelog.outputs.changelog_updated == 'false' && steps.get_pr_number.outputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `‚ö†Ô∏è **Changelog Reminder**
            
            This PR does not include changes to \`CHANGELOG.md\`
            
            Please consider updating the changelog if this PR includes:
            - üÜï New features
            - üêõ Bug fixes 
            - üí• Breaking changes
            - üîß Important updates
            
            *This is just a friendly reminder!* üòä`;
            
            const response = await github.rest.issues.createComment({
              issue_number: ${{ steps.get_pr_number.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
            // Save the comment ID for potential deletion later
            core.setOutput('comment_id', response.data.id);
            console.log(`Comment created with ID: ${response.data.id}`);
            
      - name: Fail check (no changelog)
        if: steps.check_changelog.outputs.changelog_updated == 'false'
        run: |
          echo "‚ùå FAILING CHECK: CHANGELOG.md has not been updated"
          echo "A comment has been posted on the PR to remind you."
          exit 1
          
      - name: Delete previous changelog reminder comments
        if: steps.check_changelog.outputs.changelog_updated == 'true' && steps.get_pr_number.outputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üîç Looking for previous changelog reminder comments to delete...');
            
            // Get all comments on the PR
            const comments = await github.rest.issues.listComments({
              issue_number: ${{ steps.get_pr_number.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            // Find and delete comments from github-actions bot that contain "Changelog Reminder"
            let deletedCount = 0;
            for (const comment of comments.data) {
              if (comment.user.login === 'github-actions[bot]' && 
                  comment.body.includes('Changelog Reminder')) {
                console.log(`üóëÔ∏è  Deleting comment ID: ${comment.id}`);
                await github.rest.issues.deleteComment({
                  comment_id: comment.id,
                  owner: context.repo.owner,
                  repo: context.repo.repo
                });
                deletedCount++;
              }
            }
            
            if (deletedCount > 0) {
              console.log(`‚úÖ Deleted ${deletedCount} previous changelog reminder comment(s)`);
            } else {
              console.log('‚ÑπÔ∏è  No previous changelog reminder comments found to delete');
            }
            
      - name: Success message
        if: steps.check_changelog.outputs.changelog_updated == 'true'
        run: |
          echo "üéâ SUCCESS: CHANGELOG.md has been updated!"
          echo "Thank you for documenting your changes."
          echo "Previous changelog reminder comments have been cleaned up."
