name: Changelog UpdateCheck

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

jobs:
  changelog-check:
    runs-on: ubuntu-latest
    name: Check CHANGELOG.md for updates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          
      - name: Check for CHANGELOG.md changes
        id: check_changelog
        run: |
          echo "üîç Checking for CHANGELOG.md changes..."
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
          # Get the current branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Branch: $BRANCH_NAME"
          
          # Try to find associated PR for this branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # We have direct PR context
            BASE_REF="${{ github.event.pull_request.base.sha }}"
            echo "PR event detected - using base SHA: $BASE_REF"
          else
            # For push events, try to find the PR and get its base
            echo "Push event - trying to find associated PR..."
            
            # Get PR info using GitHub API
            PR_INFO=$(curl -s -H "Authorization: token ${{ github.token }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:$BRANCH_NAME&state=open")
            
            if echo "$PR_INFO" | jq -e '.[0]' > /dev/null 2>&1; then
              BASE_REF=$(echo "$PR_INFO" | jq -r '.[0].base.sha')
              echo "Found PR - using base SHA: $BASE_REF"
            else
              # Fallback to master comparison
              if git show-ref --verify --quiet refs/remotes/origin/master; then
                BASE_REF="origin/master"
              elif git show-ref --verify --quiet refs/heads/master; then  
                BASE_REF="master"
              else
                echo "‚ö†Ô∏è  Cannot find master branch, using HEAD~1"
                BASE_REF="HEAD~1"
              fi
              echo "No PR found - comparing against: $BASE_REF"
            fi
          fi
          
          # Show changed files for debugging
          echo "All changed files in this branch:"
          git diff --name-only $BASE_REF...HEAD
          
          # Check if CHANGELOG.md was modified anywhere in this branch
          if git diff --name-only $BASE_REF...HEAD | grep -q "^CHANGELOG\.md$"; then
            echo "changelog_updated=true" >> $GITHUB_OUTPUT
            echo "‚úÖ CHANGELOG.md has been updated in this branch"
          else
            echo "changelog_updated=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  CHANGELOG.md has NOT been updated in this branch"
          fi
          
      - name: Show reminder (would comment on PR)
        if: steps.check_changelog.outputs.changelog_updated == 'false'
        run: |
          echo "üìù WOULD POST THIS COMMENT ON PR:"
          echo "=================================="
          echo "‚ö†Ô∏è This PR does not include changes to CHANGELOG.md"
          echo ""
          echo "Please consider updating the changelog if this PR includes:"
          echo "- New features"
          echo "- Bug fixes" 
          echo "- Breaking changes"
          echo "- Important updates"
          echo ""
          echo "Note: This is just a friendly reminder!"
          echo ""
          echo "‚ùå FAILING CHECK TO GET YOUR ATTENTION"
          exit 1
          
      - name: Success message
        if: steps.check_changelog.outputs.changelog_updated == 'true'
        run: |
          echo "üéâ SUCCESS: CHANGELOG.md has been updated!"
          echo "Thank you for documenting your changes."
